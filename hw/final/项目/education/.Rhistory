crPlots(enroll_model)
# 验证是否确实线性
crPlots(enroll_model)
ncvTest(enroll_model)
# 检验误差方差是否恒定
ncvTest(enroll_model)
# 不显著 -> 恒定
spreadLevelPlot(enroll_model)
summary(edu)
str(edu)
# 加载需要的包
library(dplyr)
library(ggplot2)
library(mice)
library(caret)
rm(list = ls())
# 读取需要数据集
edu <- read.csv("education.csv", stringsAsFactors = F)
# 统计概要
summary(edu)
# 缺失值判断
md.pattern(edu, rotate.names = T)
any(is.na(edu))
# 可以看到没有缺失值
# 数据标准化
# numeric_vars <- c("失业率", "高教总入学率")
# edu[numeric_vars] <- scale(edu[numeric_vars])
# 列名简短
# 列名修改对应的映射字典
col_mapping <- c(
"Countries and Areas" = "地区",
"Latitude" = "纬度",
"Longitude" = "经度",
"OOSR_Pre0Primary_Age_Male" = "学前失学率男",
"OOSR_Pre0Primary_Age_Female" = "学前失学率女",
"OOSR_Primary_Age_Male" = "小学失学率男",
"OOSR_Primary_Age_Female" = "小学失学率女",
"OOSR_Lower_Secondary_Age_Male" = "初中失学率男",
"OOSR_Lower_Secondary_Age_Female" = "初中失学率女",
"OOSR_Upper_Secondary_Age_Male" = "高中失学率男",
"OOSR_Upper_Secondary_Age_Female" = "高中失学率女",
"Completion_Rate_Primary_Male" = "小学完成率男",
"Completion_Rate_Primary_Female" = "小学完成率女",
"Completion_Rate_Lower_Secondary_Male" = "初中完成率男",
"Completion_Rate_Lower_Secondary_Female" = "初中完成率女",
"Completion_Rate_Upper_Secondary_Male" = "高中完成率男",
"Completion_Rate_Upper_Secondary_Female" = "高中完成率女",
"Grade_2_3_Proficiency_Reading" = "23年级阅读",
"Grade_2_3_Proficiency_Math" = "23年级数学",
"Primary_End_Proficiency_Reading" = "小学结束阅读",
"Primary_End_Proficiency_Math" = "小学结束数学",
"Lower_Secondary_End_Proficiency_Reading" = "初中结束阅读",
"Lower_Secondary_End_Proficiency_Math" = "初中结束数学",
"Youth_15_24_Literacy_Rate_Male" = "青年识字率男",
"Youth_15_24_Literacy_Rate_Female" = "青年识字率女",
"Birth_Rate" = "出生率",
"Gross_Primary_Education_Enrollment" = "小教总入学率",
"Gross_Tertiary_Education_Enrollment" = "高教总入学率",
"Unemployment_Rate" = "失业率"
)
# 修改列名
edu2 <- edu
colnames(edu2) <- col_mapping
# 相关性分析
require(corrplot)
library(Hmisc)
# 相关
correlation <- cor(edu2[, 4:29])
(symnum_res <- symnum(correlation))
cor_1 <- rcorr(as.matrix(edu2[, 4:29]))
M <- cor_1$r
p_mat <- cor_1$P
# tl.cex 调整字体大小
# pch.cex 调整叉叉大小
corrplot(M, type = "upper", order = "hclust", p.mat = p_mat, sig.level = 0.01, tl.cex = 0.7, pch.cex = 0.7)
# 相关性分析
require(corrplot)
library(Hmisc)
cor <- rcorr(as.matrix(edu2[, 4:29]))
M <- cor$r
p_mat <- cor$P
# tl.cex 调整字体大小
# pch.cex 调整叉叉大小
corrplot(M, type = "upper", order = "hclust", p.mat = p_mat, sig.level = 0.01, tl.cex = 0.7, pch.cex = 0.7)
z <- edu$Gross_Tertiary_Education_Enrollment
hist(z, breaks=nbreaks, freq=FALSE,
xlab="Studentized Residual",
rug(jitter(z), col="brown")
curve(dnorm(x, mean=mean(z), sd=sd(z)),
z <- edu$Gross_Tertiary_Education_Enrollment
hist(z, breaks=nbreaks, freq=FALSE,
xlab="Studentized Residual",
curve(dnorm(x, mean=mean(z), sd=sd(z)),
add=TRUE, col="blue", lwd=2)
lines(density(z)$x, density(z)$y,
z <- edu$Gross_Tertiary_Education_Enrollment
hist(z, breaks=nbreaks, freq=FALSE,
curve(dnorm(x, mean=mean(z), sd=sd(z)),
add=TRUE, col="blue", lwd=2)
lines(density(z)$x, density(z)$y,
z <- edu$Gross_Tertiary_Education_Enrollment
hist(z, breaks=nbreaks, freq=FALSE,
curve(dnorm(x, mean=mean(z), sd=sd(z)),
add=TRUE, col="blue", lwd=2))
z <- edu$Gross_Tertiary_Education_Enrollment
hist(z, breaks=10, freq=FALSE,
curve(dnorm(x, mean=mean(z), sd=sd(z)),
add=TRUE, col="blue", lwd=2))
z <- edu$Gross_Tertiary_Education_Enrollment
hist(z, breaks=10, freq=FALSE, curve(dnorm(x, mean=mean(z), sd=sd(z)), add=TRUE, col="blue", lwd=2))
z
z <- edu$Gross_Tertiary_Education_Enrollment
hist(z, col = "lightblue")
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- edu$Gross_Tertiary_Education_Enrollment
hist(z, col = "lightblue", freq = F)
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- edu$Gross_Tertiary_Education_Enrollment
hist(z, col = "lightblue", freq = F, breaks = 10)
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- edu$Gross_Tertiary_Education_Enrollment
hist(z, col = "lightblue", freq = F, breaks = 20)
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- edu$Gross_Tertiary_Education_Enrollment
hist(z, col = "lightblue", freq = F, breaks = 50)
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- edu$Gross_Tertiary_Education_Enrollment
hist(z, col = "lightblue", freq = F, breaks = 10)
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- edu$Gross_Tertiary_Education_Enrollment
hist(z, col = "lightblue", freq = F, breaks = 5)
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- edu$Gross_Tertiary_Education_Enrollment
hist(z, col = "lightblue", freq = F, breaks = 10)
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- edu$Gross_Tertiary_Education_Enrollment
# 高等教育总入学率直方图
hist(z, col = "lightblue", freq = F, breaks = 10, main = "高等教育总入学率")
plot(density(z))
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- as.data.frame(values = edu$Gross_Tertiary_Education_Enrollment)
z <- data.frame(values = edu$Gross_Tertiary_Education_Enrollment)
# 高等教育总入学率直方图
ggplot(z, aes(x = values)) +
geom_histogram(binwidth = 0.5, fill = "lightblue", color = "black") +
geom_density(color = "red") +
labs(title = "Histogram and Density Plot", x = "Values", y = "Frequency") +
theme_minimal()
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- data.frame(values = edu$Gross_Tertiary_Education_Enrollment)
# 高等教育总入学率直方图
ggplot(z, aes(x = values)) +
geom_histogram(binwidth = 2, fill = "lightblue", color = "black") +
geom_density(color = "red") +
labs(title = "高等教育总入学率直方图", x = "入学率", y = "频率") +
theme_minimal()
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- data.frame(values = edu$Gross_Tertiary_Education_Enrollment)
# 高等教育总入学率直方图
ggplot(z, aes(x = values)) +
geom_histogram(binwidth = 10, fill = "lightblue", color = "black") +
geom_density(color = "red") +
labs(title = "高等教育总入学率直方图", x = "入学率", y = "频率") +
theme_minimal()
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- data.frame(values = edu$Gross_Tertiary_Education_Enrollment)
# 高等教育总入学率直方图
ggplot(z, aes(x = values)) +
geom_histogram(y = ..desity.., binwidth = 10, fill = "lightblue", color = "black") +
geom_density(color = "red") +
labs(title = "高等教育总入学率直方图", x = "入学率", y = "频率") +
theme_minimal()
z <- data.frame(values = edu$Gross_Tertiary_Education_Enrollment)
# 高等教育总入学率直方图
ggplot(z, aes(x = values)) +
geom_histogram(y = ..density.., binwidth = 10, fill = "lightblue", color = "black") +
geom_density(color = "red") +
labs(title = "高等教育总入学率直方图", x = "入学率", y = "频率") +
theme_minimal()
z <- data.frame(values = edu$Gross_Tertiary_Education_Enrollment)
# 高等教育总入学率直方图
ggplot(z, aes(x = values)) +
geom_histogram(y = aes(..density..), binwidth = 10, fill = "lightblue", color = "black") +
geom_density(color = "red") +
labs(title = "高等教育总入学率直方图", x = "入学率", y = "频率") +
theme_minimal()
z <- data.frame(values = edu$Gross_Tertiary_Education_Enrollment)
# 高等教育总入学率直方图
ggplot(z, aes(x = values)) +
geom_histogram(aes(y = ..density..), binwidth = 10, fill = "lightblue", color = "black") +
geom_density(color = "red") +
labs(title = "高等教育总入学率直方图", x = "入学率", y = "频率") +
theme_minimal()
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- data.frame(values = edu$Gross_Tertiary_Education_Enrollment)
# 高等教育总入学率直方图
ggplot() +
geom_histogram(data = z, aes(x = values, y = ..density..),
binwidth = 10, fill = "lightblue", color = "black") +
geom_density(data = z, aes(x = values, y = ..density..),
color = "red") +
geom_vline(data = z, aes(xintercept = mean(values),
color = "Mean"), linetype = "dashed") +
geom_vline(data = z, aes(xintercept = mean(values) - sqrt(var(values)),
color = "Lower SD"), linetype = "dashed") +
geom_vline(data = z, aes(xintercept = mean(values) + sqrt(var(values)),
color = "Upper SD"), linetype = "dashed") +
labs(title = "高等教育总入学率直方图",
x = "入学率", y = "频率") +
theme_minimal() +
scale_color_manual(values = c("black", "blue", "green"),
labels = c("Density", "Mean", "Standard Deviation"),
guide = guide_legend())
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- data.frame(values = edu$Gross_Tertiary_Education_Enrollment)
# 高等教育总入学率直方图
ggplot() +
geom_histogram(data = z, aes(x = values, y = ..density..),
binwidth = 10, fill = "lightblue", color = "black") +
geom_density(data = z, aes(x = values, y = ..density..),
color = "red") +
geom_vline(data = z, aes(xintercept = mean(values),
color = "Mean"), linetype = "dashed") +
geom_vline(data = z, aes(xintercept = mean(values) - sqrt(var(values)),
color = "Lower SD"), linetype = "dashed") +
geom_vline(data = z, aes(xintercept = mean(values) + sqrt(var(values)),
color = "Upper SD"), linetype = "dashed") +
labs(title = "高等教育总入学率直方图",
x = "入学率", y = "频率") +
theme_minimal() +
scale_color_manual(values = c("black", "yellow", "green"),
labels = c("Density", "Mean", "Standard Deviation"),
guide = guide_legend())
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- data.frame(values = edu$Gross_Tertiary_Education_Enrollment)
# 高等教育总入学率直方图
ggplot() +
geom_histogram(data = z, aes(x = values, y = ..density..),
binwidth = 10, fill = "lightblue", color = "black") +
geom_density(data = z, aes(x = values, y = ..density..),
color = "red") +
geom_vline(data = z, aes(xintercept = mean(values),
color = "Mean"), linetype = "dashed") +
geom_vline(data = z, aes(xintercept = mean(values) - sqrt(var(values)),
color = "Lower SD"), linetype = "dashed") +
geom_vline(data = z, aes(xintercept = mean(values) + sqrt(var(values)),
color = "Upper SD"), linetype = "dashed") +
labs(title = "高等教育总入学率直方图",
x = "入学率", y = "频率") +
theme_minimal() +
scale_color_manual(values = c("black", "purple", "green"),
labels = c("Density", "Mean", "Standard Deviation"),
guide = guide_legend())
# lines(density(z)$x, density(z)$y,
# col="red", lwd=2, lty=2)
# legend("topright",
# legend = c( "Normal Curve", "Kernel Density Curve"),
# lty=1:2, col=c("blue","red"), cex=.7)
z <- data.frame(values = edu$Gross_Tertiary_Education_Enrollment)
# 高等教育总入学率直方图
ggplot() +
geom_histogram(data = z, aes(x = values, y = ..density..),
binwidth = 10, fill = "lightblue", color = "black") +
geom_density(data = z, aes(x = values, y = ..density..),
color = "red") +
geom_vline(data = z, aes(xintercept = mean(values),
color = "Mean"), linetype = "dashed") +
geom_vline(data = z, aes(xintercept = mean(values) - sqrt(var(values)),
color = "Lower SD"), linetype = "dashed") +
geom_vline(data = z, aes(xintercept = mean(values) + sqrt(var(values)),
color = "Upper SD"), linetype = "dashed") +
labs(title = "高等教育总入学率直方图",
x = "入学率", y = "频率") +
theme_minimal() +
scale_color_manual(values = c("black", "purple", "green"),
labels = c("Density", "Mean", "Standard Deviation"),
guide = guide_legend())
enroll_model <- lm(Gross_Tertiary_Education_Enrollment ~., data = edu[c(-1, -2, -3), ])
enroll_model <- lm(Gross_Tertiary_Education_Enrollment ~., data = edu[c(-1, -2, -3), ])
enroll_model$coefficients
edu[c(-1, -2, -3), ]
enroll_model <- lm(Gross_Tertiary_Education_Enrollment ~., data = edu[, -c(1:3)])
enroll_model$coefficients
enroll_model <- lm(Gross_Tertiary_Education_Enrollment ~., data = edu[, -c(1:3)])
enroll_model$coefficients
summary(enroll_model)
# 我们挑出具有显著性的变量重新进行建模
enroll_model <- lm(Gross_Tertiary_Education_Enrollment ~., data = edu[, c(Lower_Secondary_End_Proficiency_Math, Birth_Rate, Gross_Primary_Education_Enrollment, Unemployment_Rate)])
# 我们挑出具有显著性的变量重新进行建模
enroll_model <- lm(Gross_Tertiary_Education_Enrollment ~ Lower_Secondary_End_Proficiency_Math + Birth_Rate + Gross_Primary_Education_Enrollment + Gross_Primary_Education_Enrollment, data = edu)
enroll_model$coefficients
summary(enroll_model)
# 我们挑出具有显著性的变量重新进行建模
enroll_model <- lm(Gross_Tertiary_Education_Enrollment ~ Lower_Secondary_End_Proficiency_Math + Birth_Rate + Gross_Primary_Education_Enrollment + Unemployment_Rate, data = edu)
enroll_model$coefficients
summary(enroll_model)
ggplot(data = edu, aes(x = Lower_Secondary_End_Proficiency_Math, y = Gross_Tertiary_Education_Enrollment)) +
geom_point()
ggplot(data = edu, aes(x = Lower_Secondary_End_Proficiency_Math, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = edu, aes(x = Lower_Secondary_End_Proficiency_Math, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
par(mfrow=c(2,2))
ggplot(data = edu, aes(x = Lower_Secondary_End_Proficiency_Math, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot(data = edu, aes(x = Birth_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot(data = edu, aes(x = Gross_Primary_Education_Enrollment, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot(data = edu, aes(x = Unemployment_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot(data = edu, aes(x = Lower_Secondary_End_Proficiency_Math, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T) +
facet_wrap(~ ., nrow = 2, ncol = 2)
ggplot(data = edu, aes(x = Birth_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot(data = edu, aes(x = Gross_Primary_Education_Enrollment, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot(data = edu, aes(x = Unemployment_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot(data = edu, aes(x = Lower_Secondary_End_Proficiency_Math, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T) +
facet_wrap(~ ., nrow = 2, ncol = 2) +
ggplot(data = edu, aes(x = Birth_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot() +
geom_point(data = edu, aes(x = Lower_Secondary_End_Proficiency_Math, y = Gross_Tertiary_Education_Enrollment)) +
geom_smooth(data = edu, aes(x = Lower_Secondary_End_Proficiency_Math, y = Gross_Tertiary_Education_Enrollment), method = "lm", se = TRUE) +
facet_wrap(~ ., nrow = 2, ncol = 2) +
theme(plot.margin = margin(0.5, 0.5, 0.5, 0.5)) +
ggplot() +
geom_point(data = edu, aes(x = Birth_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_smooth(data = edu, aes(x = Birth_Rate, y = Gross_Tertiary_Education_Enrollment), method = "lm", se = TRUE) +
theme(plot.margin = margin(0.5, 0.5, 0.5, 0.5)) +
ggplot() +
geom_point(data = edu, aes(x = Gross_Primary_Education_Enrollment, y = Gross_Tertiary_Education_Enrollment)) +
geom_smooth(data = edu, aes(x = Gross_Primary_Education_Enrollment, y = Gross_Tertiary_Education_Enrollment), method = "lm", se = TRUE) +
theme(plot.margin = margin(0.5, 0.5, 0.5, 0.5)) +
ggplot() +
geom_point(data = edu, aes(x = Unemployment_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_smooth(data = edu, aes(x = Unemployment_Rate, y = Gross_Tertiary_Education_Enrollment), method = "lm", se = TRUE) +
theme(plot.margin = margin(0.5, 0.5, 0.5, 0.5))
ggplot() +
geom_point(data = edu, aes(x = Lower_Secondary_End_Proficiency_Math, y = Gross_Tertiary_Education_Enrollment)) +
geom_smooth(data = edu, aes(x = Lower_Secondary_End_Proficiency_Math, y = Gross_Tertiary_Education_Enrollment), method = "lm", se = TRUE) +
facet_wrap(~ ., nrow = 2, ncol = 2) +
theme(plot.margin = margin(0.5, 0.5, 0.5, 0.5)) +
geom_point(data = edu, aes(x = Birth_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_smooth(data = edu, aes(x = Birth_Rate, y = Gross_Tertiary_Education_Enrollment), method = "lm", se = TRUE) +
theme(plot.margin = margin(0.5, 0.5, 0.5, 0.5)) +
geom_point(data = edu, aes(x = Gross_Primary_Education_Enrollment, y = Gross_Tertiary_Education_Enrollment)) +
geom_smooth(data = edu, aes(x = Gross_Primary_Education_Enrollment, y = Gross_Tertiary_Education_Enrollment), method = "lm", se = TRUE) +
theme(plot.margin = margin(0.5, 0.5, 0.5, 0.5)) +
geom_point(data = edu, aes(x = Unemployment_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_smooth(data = edu, aes(x = Unemployment_Rate, y = Gross_Tertiary_Education_Enrollment), method = "lm", se = TRUE) +
theme(plot.margin = margin(0.5, 0.5, 0.5, 0.5))
ggplot(data = edu, aes(x = Lower_Secondary_End_Proficiency_Math, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T) +
facet_wrap(~ ., nrow = 2, ncol = 2) +
ggplot(data = edu, aes(x = Birth_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot(data = edu, aes(x = Lower_Secondary_End_Proficiency_Math, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot(data = edu, aes(x = Birth_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot(data = edu, aes(x = Gross_Primary_Education_Enrollment, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot(data = edu, aes(x = Unemployment_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
qqPlot(enroll_model, simulate = T)
# 加载需要的包
library(dplyr)
library(ggplot2)
library(mice)
library(caret)
library(car)
rm(list = ls())
# 读取需要数据集
edu <- read.csv("education.csv", stringsAsFactors = F)
z <- data.frame(values = edu$Gross_Tertiary_Education_Enrollment)
# 高等教育总入学率直方图
ggplot() +
geom_histogram(data = z, aes(x = values, y = ..density..),
binwidth = 10, fill = "lightblue", color = "black") +
geom_density(data = z, aes(x = values, y = ..density..),
color = "red") +
geom_vline(data = z, aes(xintercept = mean(values),
color = "Mean"), linetype = "dashed") +
geom_vline(data = z, aes(xintercept = mean(values) - sqrt(var(values)),
color = "Lower SD"), linetype = "dashed") +
geom_vline(data = z, aes(xintercept = mean(values) + sqrt(var(values)),
color = "Upper SD"), linetype = "dashed") +
labs(title = "高等教育总入学率直方图",
x = "入学率", y = "频率") +
theme_minimal() +
scale_color_manual(values = c("black", "purple", "green"),
labels = c("Density", "Mean", "Standard Deviation"),
guide = guide_legend())
enroll_model <- lm(Gross_Tertiary_Education_Enrollment ~., data = edu[, -c(1:3)])
enroll_model$coefficients
summary(enroll_model)
ggplot(data = edu, aes(x = Lower_Secondary_End_Proficiency_Math, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot(data = edu, aes(x = Birth_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot(data = edu, aes(x = Gross_Primary_Education_Enrollment, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
ggplot(data = edu, aes(x = Unemployment_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = T)
# 我们挑出具有显著性的变量重新进行建模
enroll_model <- lm(Gross_Tertiary_Education_Enrollment ~ Lower_Secondary_End_Proficiency_Math + Birth_Rate + Gross_Primary_Education_Enrollment + Unemployment_Rate, data = edu)
enroll_model$coefficients
summary(enroll_model)
qqPlot(enroll_model, simulate = T)
residplot <- function(fit, nbreaks=10) {
z <- rstudent(fit)
hist(z, breaks=nbreaks, freq=FALSE,
xlab="Studentized Residual",
main="Distribution of Errors")
rug(jitter(z), col="brown")
curve(dnorm(x, mean=mean(z), sd=sd(z)),
add=TRUE, col="blue", lwd=2)
lines(density(z)$x, density(z)$y,
col="red", lwd=2, lty=2)
legend("topright",
legend = c( "Normal Curve", "Kernel Density Curve"),
lty=1:2, col=c("blue","red"), cex=.7)
}
residplot(enroll_model)
# 出问题，均值不在0这
