md.pattern(x)
library(mice)
install.packages(mice)
library(mice)
install.packages('mice')
y<-boxplot.stats(x[,2], coef=1.5, do.conf=TRUE, do.out=TRUE)
library(mice)
x=iris
x[sample(1:nrow(x), 6),1 ] <- NA
#随机在iris数据集第1列生成6行NA
colnames(x)<-c("SL","SW","PL","PW","SP")
md.pattern(x)
y<-boxplot.stats(x[,2], coef=1.5, do.conf=TRUE, do.out=TRUE)
boxplot(x[,2])               #绘制箱线图
y$stats
y$out
#寻找a为异常值的坐标位置
a<-which(x[,1] %in% boxplot.stats(x[,1])$out)
#寻找b为异常值的坐标位置
b<-which(x[,2] %in% boxplot.stats(x[,2],coef=1.0)$out)
df<-data.frame(x[,1], x[,2])
plot(df) #绘制x, y的散点图
p2<-union(a,b) #寻找变量x或y为异常值的坐标位置
points(df[p2,],col="red",pch="x",cex=2) #标记异常值
k<-kmeans(iris[,c(1,2)],centers=3) #kmeans聚类为3类
#k$cluster #输出聚类结果
#centers返回每个样本对应的聚类中心样本
centers <- k$centers[k$cluster, ]
#计算每个样本到其聚类中心的距离
distances<-sqrt(rowSums((iris[,1:2]-centers)^2))
#找到距离最大的6个样本，认为是异常值
out<-order(distances,decreasing=TRUE)[1:6]
plot(iris[,c(1,2)])
points(iris[out,c(1,2)],col="red",pch="x",cex=2) #标记异常值
data=iris[,1]
#summary(data)
data1=scale(data,center=T,scale=F)
#summary(data1)
data2=scale(data,center=F,scale=T)
#summary(data2)
data3=scale(data,center=T,scale=T)
#summary(data3)
par(mfrow=c(2,2))
hist(data,main="origin data",breaks = 20)
hist(data1,main="centered data",breaks = 20)
hist(data2,main="scaled data",breaks = 20)
hist(data3,main="centered & scaled data",breaks = 20)
data=data.frame(v1=c(1,3,2,5,4),v2=c('a','c','b','e','d'))
#data frame对象 含有v1,v2两列
data[sort(data$v1,index.return=TRUE)$ix,]　　
#对data的数据按v1排列,v1须为numeric
data=data.frame(v1=c(1,3,2,5,4),v2=c('a','c','b','e','d'))
#data frame对象 含有v1,v2两列
data[sort(data$v2,index.return=TRUE)$ix,]　　
#对data的数据按v1排列,v1须为numeric
data=data.frame(v1=c(1,3,2,5,4),v2=c('f','z','b','*','j'))
#data frame对象 含有v1,v2两列
data[sort(data$v2,index.return=TRUE)$ix,]　　
#对data的数据按v1排列,v1须为numeric
data=data.frame(v1=c(1,3,2,5,4),v2=c('f','z','b','*','j'))
#data frame对象 含有v1,v2两列
#data[sort(data$v2,index.return=TRUE)$ix,]　
data[sort(data$v1,index.return=TRUE)$ix,]　
#对data的数据按v1排列,v1须为numeric
(m=matrix(c(1,2,3,4),nrow=2))
as.vector(m)
(m=matrix(c(1,2,3,4),nrow=2))
m
as.vector(m)
(m=matrix(c(1,2,3,4),nrow=2))
paste(m)
paste('aaaa')
as.vector(m)
(v=sample(letters[1:5],10,replace=TRUE))
(t=table(v))
length(t);names(t)
(v=sample(letters[1:5],10,replace=FALSE))
(v=sample(letters[1:5],10,replace=TRUE))
(t=table(v))
length(t);names(t)
(v=sample(letters[1:20],10,replace=FALSE))
(t=table(v))
length(t);names(t)
(a<-rep(letters[1:3],each=4))
(b<-sample(LETTERS[1:3],12,replace=T))
(t=table(a,b))
nrow(t);colnames(t);rownames(t)
library(vcd)
install.packages('vcd')
library(vcd)
#风湿性关节炎新疗法的双盲临床实验
#Improved:
#none: 无改善
#some: 一定程度改善
#marked：显著改善
#Treatment
#Treated: 用药治疗
#Placebo: 安慰剂治疗
head(Arthritis)
(mytable=with(Arthritis,table(Improved)))
prop.table(mytable)
(mytable=xtabs(~Treatment+Improved,data=Arthritis))
margin.table(mytable,1)
margin.table(mytable,2)
curve(dnorm(x, m=10, sd=2))
x = iris
nrow(x)
x
#随机取6行 第1列赋值为NA
x[sample(1:nrow(x), 6),1 ] <- NA
x
is.na(x)
sum(complete.cases(x))
sum(!complete.cases(x))
complete.cases(x)
data <- data.frame(
Var1 = c(10, 20, NA, 30, NA),
Var2 = c(NA, 40, 50, NA, 60),
Var3 = c(NA, 70, NA, NA, 80)
)
# 使用md.pattern返回数据的缺失模式
missing_pattern <- md.pattern(data)
# 打印输出缺失模式
print(missing_pattern)
library(mice)
#莺尾花数据
x=iris
#随机取6行 第1列赋值为NA
x[sample(1:nrow(x), 12),1 ] <- NA
x[sample(1:nrow(x), 6), 3] <- NA
#将x数据集的列名重命名为"SL"，"SW"，"PL"，"PW"和"SP"，分别代表萼片长度、萼片宽度、花瓣长度、花瓣宽度和花的种类
#随机在iris数据集第1列生成12行NA
#随机在iris数据集第3列生成6行NA
colnames(x)<-c("SL","SW","PL","PW","SP")
md.pattern(x)
library(mice)
#莺尾花数据
x=iris
#随机取6行 第1列赋值为NA
x[sample(1:nrow(x), 12),1 ] <- NA
x[sample(1:nrow(x), 6), 3] <- NA
#将x数据集的列名重命名为"SL"，"SW"，"PL"，"PW"和"SP"，分别代表萼片长度、萼片宽度、花瓣长度、花瓣宽度和花的种类
#随机在iris数据集第1列生成12行NA
#随机在iris数据集第3列生成6行NA
colnames(x)<-c("SL","SW","PL","PW","SP")
md.pattern(x)
#寻找a为异常值的坐标位置
a<-which(x[,1] %in% boxplot.stats(x[,1])$out)
#寻找b为异常值的坐标位置
b<-which(x[,2] %in% boxplot.stats(x[,2],coef=1.0)$out)
df<-data.frame(x[,1], x[,2])
plot(df) #绘制x, y的散点图
p2<-union(a,b) #寻找变量x或y为异常值的坐标位置
points(df[p2,],col="red",pch="x",cex=2) #标记异常值
p2
a
b
head(df)
a
a<-which(x[,1] %in% boxplot.stats(x[,1])$out)
a
length(a)
p2
p2
df[p2,]
k<-kmeans(iris[,c(1,2)],centers=3) #kmeans聚类为3类
#k$cluster #输出聚类结果
#centers返回每个样本对应的聚类中心样本
centers <- k$centers[k$cluster, ]
#计算每个样本到其聚类中心的距离
distances<-sqrt(rowSums((iris[,1:2]-centers)^2))
#找到距离最大的6个样本，认为是异常值
out<-order(distances,decreasing=TRUE)[1:6]
plot(iris[,c(1,2)])
k<-kmeans(iris[,c(1,2)],centers=3) #kmeans聚类为3类
#k$cluster #输出聚类结果
#centers返回每个样本对应的聚类中心样本
centers <- k$centers[k$cluster, ]
center
centers
(m=matrix(c(1,2,3,4),nrow=2))
paste(m)
paste('aaaa')
as.vector(m)
(v=sample(letters[1:20],10,replace=FALSE))
(t=table(v))
length(t);names(t)
(a<-rep(letters[1:3],each=4))
(b<-sample(LETTERS[1:3],12,replace=T))
(t=table(a,b))
nrow(t);colnames(t);rownames(t)
a
b
(mytable=xtabs(~Treatment+Improved,data=Arthritis))
prop.table(mytable,1)
prop.table(mytable,2)
prop.table(mytable)
(mytable=xtabs(~Treatment+Improved,data=Arthritis))
addmargins(mytable)
addmargins(prop.table(mytable))
(mytable=xtabs(~Treatment+Improved,data=Arthritis))
addmargins(prop.table(mytable,1),2)
addmargins(prop.table(mytable,2),1)
table(state.region)
aggregate(state.x77, list(Region = state.region), mean)
aggregate(state.x77,
list(Region = state.region,
Cold = state.x77[,"Frost"] > 130),
mean)
